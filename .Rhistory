laughsummary<-summarySEwithin(longData, measurevar = "value",betweenvars = NULL,withinvars =  "groupVar")
# Standard error of the mean
ylabel<-paste("Number of ", varName,sep = "")
p<-ggplot(laughsummary, aes(x=groupVar, y=value, group=1)) +
geom_errorbar(aes(ymin=value-se, ymax=value+se), width=.1) +
geom_line() +
geom_point(size=4) +
ylab(ylabel) +
xlab(NULL) +
theme_bw(base_size =24)
return(p)
}
onewayErrors(longLaughs,"Laughs")
onewayErrors(longSmiles, "Smiles")
onewayErrors(longBoth, "Laughs and Smiles")
plotOneWayANOVA <- function (longData, varName) {
#calculate repeated measures standard errors
laughsummary<-summarySEwithin(longData, measurevar = "value",betweenvars = NULL,withinvars =  "groupVar")
# Standard error of the mean
ylabel<-paste("Number of ", varName,sep = "")
p<-ggplot(laughsummary, aes(x=groupVar, y=value, group=1)) +
geom_errorbar(aes(ymin=value-se, ymax=value+se), width=.1) +
geom_line() +
geom_point(size=4) +
ylab(ylabel) +
xlab(NULL) +
theme_bw(base_size =24)
return(p)
}
plotOneWayANOVA(longLaughs,"Laughs")
plotGroupData(longLaughs,"Laughs")
plotGroupData <- function (data.long, varName) {
#plot groups as box plot and individual values
ylabel<-paste("Number of ", varName,sep = "")
p<-ggplot(data=data.long,aes(groupVar,value)) +
geom_boxplot() +
geom_point(aes(groupVar,value), size=5,position = position_jitter(width = .1) ) +
ylab(ylabel) +
xlab(NULL) +
theme_bw(base_size =24)
return(p)
}
#' Takes the wide (1 row per person) version of the data and makes a long
#' subset with a single DV (1 col for grouping variable, 1 col for DV)
#' In output grouping variable is "groupVar", DV is "value"
#'
#' @param allData original data
#' @param col1 1st DV column, etc
groupLongData <- function(allData,col1,col2,col3){
#subset and rearrange laugh data for anova and plotting
#convert to long format
data.long <- melt(allData,
id.vars = "ID",
measure.vars = c(col1, col2,col3),
variable.name ="groupVar")
#indicate the factor variable
data.long$groupVar <- factor(data.long$groupVar)
return(data.long)
}
#' Takes three columns from dataframe and compares them in one way Anova
#' while also plotting a box plot with overlayed individual data points.
#'
#' @param data.Long Long format version of the data.
#' @param varName Name of the grouping Variable.
#' @examples
#' plotGroupData(longLaughs, "Smiles")
plotGroupData <- function (data.long, varName) {
#plot groups as box plot and individual values
ylabel<-paste("Number of ", varName,sep = "")
p<-ggplot(data=data.long,aes(groupVar,value)) +
geom_boxplot() +
geom_point(aes(groupVar,value), size=5,position = position_jitter(width = .1) ) +
ylab(ylabel) +
xlab(NULL) +
theme_bw(base_size =24)
return(p)
}
debug(plotGroupData)
#' plots a standard interaction plot for one-way anova but taking care to
#' use standard errors suitable for repeated errors (like SPSS)
#'
#' @param data.Long Long format version of the data.
#' @param varName Name of the grouping Variable.
#' @examples
#' plotOneWayANOVA(groupLaughter, "Smiles")
plotOneWayANOVA <- function (longData, varName) {
#calculate repeated measures standard errors
laughsummary<-summarySEwithin(longData, measurevar = "value",betweenvars = NULL,withinvars =  "groupVar")
# Standard error of the mean
ylabel<-paste("Number of ", varName,sep = "")
p<-ggplot(laughsummary, aes(x=groupVar, y=value, group=1)) +
geom_errorbar(aes(ymin=value-se, ymax=value+se), width=.1) +
geom_line() +
geom_point(size=4) +
ylab(ylabel) +
xlab(NULL) +
theme_bw(base_size =24)
return(p)
}
plotGroupData(longLaughs,"Laughs")
function (data.long, varName) {
#plot groups as box plot and individual values
ylabel<-paste("Number of ", varName,sep = "")
nkjn
ezPlot(longLaughs,
dv=value,
wid = ID,
within = groupVar       )
longRatings<-groupLongData(grouplaughter,"Funniness Groups", "Funniness Pairs", "Funniness Indiv")
longRatings<-groupLongData(grouplaughter,"Funniness Groups", "Funniness Pairs", "Funniness Indiv")
grouplaughter<- read_excel('/Users/caspar/Dropbox/Baby Laughter/SocialTV/group laughter data.xlsx')
longRatings<-groupLongData(grouplaughter,"Funniness Groups", "Funniness Pairs", "Funniness Indiv")
ggplot(longRatings,aes(groupVar,values))
ggplot(longRatings,aes(groupVar,values))+geom_bar
ggplot(longRatings,aes(groupVar,values))+geom_bar()
ggplot(longRatings,aes(groupVar,values))+geom_histogram()
View(longRatings)
summary(longRatings)
table(longRatings)
table(longRatings[,2:3])
tableRatings<-table(longRatings[,2:3])
ggplot(tableRatings,aes(groupVar,values))+geom_histogram()
ggplot(longRatings,aes(groupVar))+geom_histogram()
ggplot(longRatings,aes(groupVar,value))+geom_histogram()
ggplot(longRatings,aes(groupVar,value))+geom_bar()
ggplot(longRatings,aes(groupVar)+geom_bar()
ggplot(longRatings,aes(groupVar))+geom_bar()
ggplot(longRatings,aes(groupVar~value))+geom_bar()
ggplot(longRatings,aes(value))+geom_bar()
ggplot(longRatings,aes(value,groupVar))+geom_bar()
ggplot(longRatings,aes(value))+geom_bar()
barchart(value~groupVar,longRatings)
barchart(groupVar~value,longRatings)
subset(longRatings[,2:3])
aggregate(longRatings[,2:3])
aggregate(longRatings[,2:3],count)
aggregate(longRatings[,2:3],FUN =count())
aggregate(value~groupVal, FUN=sum,data=longRatings)
aggregate(value~groupVar, FUN=sum,data=longRatings)
longRatings$value<-factor(longRatings$value)
ggplot(longRatings,aes(value))+geom_bar()
ggplot(longRatings,aes(value,groupVar))+geom_bar()
barchart(groupVar~value,longRatings)
barchart(value~groupVar,longRatings)
tableRatings<-table(longRatings[,2:3])
tableRatings
counts(longRatings)
dfsummaryRatings<-as.data.frame(tableRatings)
ggplot(dfSummaryRatings,aes(Freq,group))+geom_bar()
ggplot(dfsummaryRatings,aes(Freq,group))+geom_bar()
ggplot(dfsummaryRatings,aes(Freq,groupVar))+geom_bar()
ggplot(dfsummaryRatings,aes(groupVar,Freq))+geom_bar()
ggplot(dfsummaryRatings,aes(groupVar,Freq))
ggplot(dfsummaryRatings,aes(groupVar,Freq))+geom_histogram()
ggplot(dfsummaryRatings,aes(groupVar))+geom_histogram()
dfsummaryRatings
ggplot(dfsummaryRatings,aes(groupVar,))+geom_bar(stat=identity)
ggplot(dfsummaryRatings,aes(groupVar,))+geom_bar(stat="identity")
ggplot(dfsummaryRatings,aes(groupVar,value))+geom_bar(stat="identity")
ggplot(dfsummaryRatings,aes(groupVar,Freq))+geom_bar(stat="identity")
ggplot(dfsummaryRatings,aes(groupVar,Freq,fill=value))+geom_bar(stat="identity")
ggplot(dfsummaryRatings,aes(groupVar,Freq,fill=value)) +
geom_bar(stat="identity") +
ylab("Funniness Ratings") +
xlab(NULL) +
theme_bw(base_size =24)
ggplot(dfsummaryRatings,aes(groupVar,Freq,fill=value)) +
geom_bar(stat="identity") +
ylab("Count") +
xlab(NULL) +
theme_bw(base_size =24)
chisq.test(tableRatings)
videoRatings<-groupLongData(grouplaughter,"Rating Video1", "Rating Video2", "Rating Video3")
grouplaughter<- read_excel('/Users/caspar/Dropbox/Baby Laughter/SocialTV/group laughter data.xlsx')
videoRatings<-groupLongData(grouplaughter,"Rating Video1", "Rating Video2", "Rating Video3")
tableVideoRatings<-table(videoRatings[,2:3])
tableVideoRatings
ggplot(dfsummaryRatings,aes(groupVar,Freq,fill=value)) +
geom_bar(stat="identity") +
ylab("Count") +
xlab(NULL) +
theme_bw(base_size =24)
dfsummaryRatings<-as.data.frame(tableVideoRatings)
ggplot(dfsummaryRatings,aes(groupVar,Freq,fill=value)) +
geom_bar(stat="identity") +
ylab("Count") +
xlab(NULL) +
theme_bw(base_size =24)
chisq.test(tableVideoRatings)
t.test(grouplaughter$`Laughs Groups`,grouplaughter$`Laughs Pairs`)
t.test(grouplaughter$`Laughs Groups`,grouplaughter$`Laughs Indiv`)
t.test(grouplaughter$`Laughs Pairs`,grouplaughter$`Laughs Indiv`)
t.test(grouplaughter$`Laughs Groups`,grouplaughter$`Laughs Pairs`,paired = TRUE)
t.test(grouplaughter$`Laughs Groups`,grouplaughter$`Laughs Indiv`, paired = TRUE)
t.test(grouplaughter$`Laughs Pairs`, grouplaughter$`Laughs Indiv`, paired = TRUE)
howfunny<-cbind(longRatings,longBoth)
View(howfunny)
name(howfunny[,6])<-"count"
howfunny<-
NULL
rename(longRatings,c("value"="Rating"))
howfunny<-cbind(longRatings,longBoth$value)
table(howfunny[,3:4])
rename(longRatings,c("value"="Rating"))
longRatings<-rename(longRatings,c("value"="Rating"))
howfunny<-cbind(longRatings,longBoth$value)
ezANOVA(howfunny, dv=value,wid =ID, between=Rating)
howfunny<-rename(howfunny,c("longBoth$value"="value"))
ezANOVA(howfunny, dv=value,wid =ID, between=Rating)
ggplot(howfunny,aes(Rating,value))+geom_bar()
ggplot(howfunny,aes(Rating,value))+geom_errorbar()
ggplot(howfunny,aes(Rating,value))+geom_errorbar()
howfunny[,2]<-NULL
howfunny<-cbind(longRatings,longBoth$value)
howfunny["groupVar"]=NULL
howfunny<-rename(howfunny,c("Rating"= NULL, "longBoth$value"="value"))
howfunny<-rename(howfunny,c("Rating"= "groupVar", "longBoth$value"="value"))
ezANOVA(howfunny, dv=value,wid =ID, between=groupVar)
ggplot(howfunny,aes(Rating,value))+geom_errorbar()
plotOneWayANOVA(howfunny,varName="Laughs and Smiles")
install.packages('devtools')
x = read.csv(paste0("http:","//bit.ly/1lkmcn4"))
ggplot(x) + geom_tile(aes(x=H, y=T, fill=tc)) +
scale_fill_identity() + theme_bw()
librarry(ggplot2)
library(ggplot2)
x = read.csv(paste0("http:","//bit.ly/1lkmcn4"))
ggplot(x) + geom_tile(aes(x=H, y=T, fill=tc)) +
scale_fill_identity() + theme_bw()
install.packages(c('readxl','reshape2','ez','effects','ggplot2','Rmisc'))
install.packages("lubridate")
install.packages("tm")
a = "cash &amp; carry"
ap<-gsub("&amp;", "and",a)
posm = match("caspar is awesome","all,good,yay,awesome")
posm = match("caspar is awesome","awesome")
binomial()
?? binomial
dbinom(1:200,200,0.5)
db<-dbinom(1:200,200,0.5)
plot(db)
db<-dbinom(1:10,10,0.5)
plot(db)
lines(db)
db<-dbinom(0:10,10,0.5)
lines(db)
plot(db)
lines(db)
plot(0:10,db)
lines(db)
plot(0:10,db)
lines(0:10,db)
library(ggplot2)
install.packages("ggplot2")
require(graphics)
# Compute P(45 < X < 55) for X Binomial(100,0.5)
sum(dbinom(46:54, 100, 0.5))
## Using "log = TRUE" for an extended range :
n <- 2000
k <- seq(0, n, by = 20)
plot (k, dbinom(k, n, pi/10, log = TRUE), type = "l", ylab = "log density",
main = "dbinom(*, log=TRUE) is better than  log(dbinom(*))")
lines(k, log(dbinom(k, n, pi/10)), col = "red", lwd = 2)
## extreme points are omitted since dbinom gives 0.
mtext("dbinom(k, log=TRUE)", adj = 0)
mtext("extended range", adj = 0, line = -1, font = 4)
mtext("log(dbinom(k))", col = "red", adj = 1)
db<-pbinom(0:10,10,0.5)
plot(0:10,db)
lines(0:10,db)
sum(dbinom(7:10,10,.5))
sum(dbinom(8:10,10,.5))
install.packages("installR")
install.packages("installr")
library(installr)
installr()
q()
#baby laughter data wrangling
# installing/loading the package:
if(!require(Hmisc)) {
install.packages("Hmisc"); require(Hmisc)}
if(!require(zoo)) {
install.packages("zoo"); require(zoo)}
if(!require(plyr)) {
install.packages("plyr"); require(plyr)}
if(!require(car)) {
install.packages("car"); require(car)}
if(!require(XLConnect)) {
install.packages("XLConnect"); require(XLConnect)}
if(!require(wordcloud)) {
install.packages("wordcloud"); require(wordcloud)}
setwd("~/Dropbox/Baby Laughter/Laughter Survey Stats")
source("babylaughter_Ordered_syntax_file.R")
pf(16.43, 2, 23)
qf(0.999963,2,23)
1 - pf(16.43, 2, 23)
1 - pf(6.43, 2, 23)
pf(6.43, 2, 23)
qf(0.9939487,2,23)
1 - pf(6.43, 2, 23)
q()
library(foreign)
file.choose()
dataset = read.spss("C:\\Users\\pss02ca\\Dropbox\\Baby Laughter\\Pampers\\UK Sleep study\\Final Data_Screener&Pre-Use.sav",
to.data.frame=TRUE)
View(dataset)
View(dataset)
View(dataset)
week1 = as.Date("01/May/2016")
week1 = as.Date("01-May-2016")
week1 = as.Date("01 May 2016")
week1 = as.Date("01may2016","%d%B%Y")
dataset$daysOld <- dataset$preuse.Q4 - week1
dataset$daysOld
dataset$daysOld
dataset$preuse.Q4 - week1
datediff(dataset$preuse.Q4, week1)
difftime(dataset$preuse.Q4, week1)
dataset$preuse.Q4
dataset$DOB <- as.Date(sataset$preuse.Q4,"%d/%m/%Y" )
dataset$DOB <- as.Date(dataset$preuse.Q4,"%d/%m/%Y" )
dataset$daysOld <- difftime(dataset$DOB, week1)
hist(dataset$daysOld)
dataset$daysOld
dataset$daysOld <- as.numeric(difftime(week1,dataset$DOB))
hist(dataset$daysOld)
library(ggplot2)
.libPaths()
library(foreign)
library(ggplot2)
install.packages(c("ggplot2"))
install.packages(c("ggplot2"))
library(ggplot2)
dataset = read.spss("C:\\Users\\pss02ca\\Dropbox\\Baby Laughter\\Pampers\\UK Sleep study\\Final Data_Screener&Pre-Use.sav",
to.data.frame=TRUE)
week1 = as.Date("01may2016","%d%B%Y")
dataset$DOB <- as.Date(dataset$preuse.Q4,"%d/%m/%Y" )
dataset$daysOld <- as.numeric(difftime(week1,dataset$DOB))
ggplot(dataset,aes(daysOld))+geom_histogram()
install.packages(c("ggplot2", "ggthemes"))
install.packages(c("ggplot2", "ggthemes"))
library(ggthemes)
ggplot(dataset,aes(daysOld))+geom_histogram()+xlab("Baby age in days")+theme_wsj()
ggplot(dataset,aes(daysOld))+geom_histogram()+xlab("Baby age in days")+theme_economist()
update.packages(checkBuilt=TRUE, ask=FALSE)
chooseCRANmirror()
q()
install.packages("rmarkdown")
library(rmarkdown)
install.packages("rticles", type = "source")
library(rticles)
pf(4.285,1,9)
1-ans
1- pf(4.285,1,9)
1- pf(9.085,1,9)
1- pf(.2795,1,9)
1- pf(7.279,1,9)
library(haven)
cd ~/Dropbox
cd ~\Dropbox
setwd ~\Dropbox
library(haven)
SexFilesforKate <- read_sav("~/SexFilesforKate/SexFilesforKate.sav")
View(SexFilesforKate)
View(SexFilesforKate)
write.csv(SexFilesforKate)
write.csv(SexFilesforKate,file = "SexFilesforKate.csv")
source('C:/Users/Caspar/Dropbox/Projects/Baby Laughter/SocialTV/SocialTV.R', encoding = 'UTF-8')
power.anova.test(3,20,1,1,0.05,.8)
power.anova.test(3,NULL,1,1,0.05,.8)
power.anova.test(group = 3,between.var = 3,within.var = ,alpha=0.05,power = .8)
power.anova.test(group = 3,between.var = 3,within.var =1 ,alpha=0.05,power = .8)
power.anova.test(group = 3,between.var = 3,within.var =1 ,alpha=0.05,power = .8)
power.anova.test(group = 3,between.var = 3,within.var =1, sig.level=0.05,power = .8)
power.anova.test(group = 1,between.var = 3,within.var =1, sig.level=0.05,power = .8)
library(pwr)
install.packages('pwr')
install.packages('pwr')
cohenLarge = cohen.ES(test="f2",size="large")$effect.size
library(pwr)
cohenLarge = cohen.ES(test="f2",size="large")$effect.size
cohenLarge = cohen.ES(test="f2",size="medium")$effect.size
pwr.f2.test(u=1, f2=cohenLarge, sig.level=0.05,power = .80)
cohenLarge = cohen.ES(test="f",size="large")$effect.size
cohenLarge = cohen.ES(test="f",size="large")$effect.size
cohenLarge = cohen.ES(test="f2",size="large")$effect.size
pwr.f2.test(u=1, f2=cohenLarge, sig.level=0.05,power = .80)
View(dataset)
#load the necessary R packages
install.packages(c('readr','reshape2','ez','effects','ggplot2','ggsignif', 'Rmisc', 'svglite','sjmisc'))
library(tidyverse)
library(readxl)
library(ggplot2)
library(ggsignif)
library(reshape2)
library(ez)
library(effects)
library(Rmisc)
library(svglite)
library(pwr)
library(sjPlot)
library(sjmisc)
eta2_p <- function(dfeffect,dferror,FVAL) {
#If we have a reported effect
# F(dfeffect,dferror) = FVAL
# then partial eta square is calculated as
eta = (FVAL * dfeffect) / (FVAL * dfeffect + dferror)
# see Lakens(2013) doi:10.3389/fpsyg.2013.00863
return(eta)
}
EtaSQ = eta2_p(2,74,27.86) # returns 0.4295405
eta2_p(2,74,49.43) # returns 0.5719079
Chapmanf2 = EtaSQ / (1-EtaSQ)
pwr.f2.test(u=2, f2=Chapmanf2, sig.level=0.05,power = .80)
setwd('C:\\Users\\caspar\\Dropbox\\projects\\Baby Laughter\\SocialTV')
alldata<- read_excel('SocialTV.xlsx', 'RatingData')
alldata$SEX <- factor(alldata$SEX)
alldata$ORDER <- factor(alldata$ORDER)
##############################
#load the helper functions for plotting
source("socialTvplots.R")
#To visualise the data we need to reorder it.
longLaughs<-groupLongData(alldata, "Laughs Groups", "Laughs Pairs", "Laughs Indiv")
#plot the graph
plotGroupData(longLaughs,"Laughs")
#save it as a svg file.
svglite("SocialTV laughs.svg", height=4, width = 5)
plotGroupData(longLaughs,"Laughs")
dev.off()
chisq.test(tableRatings)
longRatings<-groupLongData(alldata,"Funniness Groups", "Funniness Pairs", "Funniness Indiv")
#let R know this is categorical data
longRatings$value<-factor(longRatings$value)
#lets collect responses into table (pick the appropriate columns)
tableRatings<-table(longRatings[,4:5])
#and a data frame for plotting
dfsummaryRatings<-as.data.frame(tableRatings)
ggplot(dfsummaryRatings,aes(groupVar,Freq,fill=value)) +
geom_bar(stat="identity") +
ylab("Count") +
xlab(NULL) +
theme_bw(base_size =24)
chisq.test(tableRatings)
mcnemar.test(tableRatings)
mcnemar.test(tableRatings, correct = FALSE)
mcnemar.test(tableRatings, correct = TRUE)
mcnemar.test(tableRatings, correct = TRUE)
tableRatings
longRatings
library(coin)
install.packages("coin")
library(coin)
lbl_test(tableRatings)
install.packages("repolr")
library(repolr)
achilles
data("achilles")
achilles
repolr(Activity~Treat*Time,times = c(1,2,3),subjects = Patient,data = achilles)
repolr(Activity~Treat*Time,times = c(1,2,3),subjects = Patient,data = achilles,categories = 3)
repolr(Activity~Treat*Time,times = c(1,2,3),subjects = "Patient",data = achilles,categories = 3)
summary.repolr()
ac<-repolr(Activity~Treat*Time,times = c(1,2,3),subjects = "Patient",data = achilles,categories = 3)
summary.repolr(ac)
View(longRatings)
View(achilles)
View(achilles)
funi<-repolr(value~groupVar*ORDER,subjects = "ID", times=c("Funniness Groups","Funniesss Pairs","Funniness Indiv"),data=longRatings,categories =3)
funi<-repolr(value~groupVar*ORDER,subjects = "ID", times=c(1,2,3),data=longRatings,categories =3)
as.numeric(longRatings$value)
longRatings$value<-as.numeric(longRatings$value)
longRatings$groupVar<-as.numeric(longRatings$groupVar)
funi<-repolr(value~groupVar*ORDER,subjects = "ID", times=c(1,2,3),data=longRatings,categories =3)
summary.repolr(funi)
funi<-repolr(value~groupVar,subjects = "ID", times=c(1,2,3),data=longRatings,categories =3)
summary.repolr(funi)
ggplot(dfsummaryRatings,aes(groupVar,Freq,fill=value)) +
geom_bar(stat="identity") +
ylab("Count") +
xlab(NULL) +
theme_bw(base_size =24)
longRatings$valueNum<-as.numeric(longRatings$value)
longRatings$groupVarNum<-as.numeric(longRatings$groupVar)
funi<-repolr(valueNum~groupVarNum,subjects = "ID", times=c(1,2,3),data=longRatings,categories =3)
summary.repolr(funi)
longRatings<-groupLongData(alldata,"Funniness Groups", "Funniness Pairs", "Funniness Indiv")
longRatings$value<-factor(longRatings$value)
#lets collect responses into table (pick the appropriate columns)
tableRatings<-table(longRatings[,4:5])
longRatings$valueNum<-as.numeric(longRatings$value)
longRatings$groupVarNum<-as.numeric(longRatings$groupVar)
funi<-repolr(valueNum~groupVarNum,subjects = "ID",data=longRatings,categories =3)
funi<-repolr(valueNum~groupVarNum,subjects = "ID", times=c(1,2,3),data=longRatings,categories =3)
longRatings$ORDERNumr<-as.numeric(longRatings$ORDER)
funi<-repolr(valueNum~groupVarNum*ORDERNum,subjects = "ID", times=c(1,2,3),data=longRatings,categories =3)
funi<-repolr(valueNum~groupVarNum*ORDERNumr,subjects = "ID", times=c(1,2,3),data=longRatings,categories =3)
summary.repolr(funi)
longRatings$valueNum<-as.numeric(longRatings$value)
longRatings$groupVarNum<-as.numeric(longRatings$groupVar)
longRatings$ORDERNum<-as.numeric(longRatings$ORDER)
funi<-repolr(valueNum~groupVarNum*ORDERNum,subjects = "ID", times=c(1,2,3),data=longRatings,categories =3)
summary.repolr(funi)
lbl_test(tableRatings)
lbl_test()
citation(replor)
citation(repolr)
citation(repolr)
citation("repolr")
View(achilles)
View(achilles)
View(alldata)
View(alldata)
